--------------------------------------------------------------------------------------------
-- LICENSE
--------------------------------------------------------------------------------------------
-- Copyright 2020 @rbasniak (https://github.com/rbasniak)

-- Permission is hereby granted, free of charge, to any person obtaining a copy of this
-- software and associated documentation files (the "Software"), to deal in the Software
-- without restriction, including without limitation the rights to use, copy, modify, merge,
-- publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons
-- to whom the Software is furnished to do so, subject to the following conditions:

-- The above copyright notice and this permission notice shall be included in all copies or
-- substantial portions of the Software.

-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
-- INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
-- PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
-- FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
-- OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-- DEALINGS IN THE SOFTWARE.

--------------------------------------------------------------------------------------------
-- DESCRIPTION
--------------------------------------------------------------------------------------------

-- Function to help locate PML.NET libraries that should be imported from PML code,
-- eliminating the need to store the library in the %PDMS_EXE% folder or using hardcoded
-- paths.
--
-- Usage
--  instead of importing the library like this:
--     import 'C:\mypath\myLibrary'
--     handle (1000,0)
--     endhandle
--  import it like this:
--      call !!rbkPmlNetImporter(<<relative_path_to_pmllib>>\mylibrary)
--------------------------------------------------------------------------------------------

define function !!rbkPmlNetImporter(!relativePath is STRING)
  var !pmllib evar 'PMLLIB'
  !folders = !pmllib.split(';')
  do !i from 1 to !folders.size()
    !extension = '.dll'
    !file = object FILE('$!folders[$!i]\$!relativePath$!extension')
    if !file.exists() then
      !parts = !file.fullName().split('\')
      !name = !parts[!parts.size()]
      !library = '$!folders[$!i]\$!relativePath'
      import '$!library'
      handle (1000,0)
      elsehandle any
        !!alert.error('Unknown error while importing $!name')
      endhandle
      return
    endif
  enddo
  !!alert.error('.NET dll file not found')
endfunction